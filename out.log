########################################################################################
########################################################################################
OUTPUT NODE
('G1', 'FF1_ip', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1', 'out1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A', 'G1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op', 'fanout1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
GATE
('G1', 'FF1_ip', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('FF1_op', 'fanout1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1', 'out1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1', 'G1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 1
faulty_node1_list ['A']
faulty_node2_list ['G1']
stuck_at_list ['sa0']
fault_path_to_op False
faulty_node1_list ['A']
faulty_node2_list ['G1']
bfs {'A': 1, 'out1': 2, 'FF1_op': 1, 'G1': 3, 'fanout1': 2, 'FF1_ip': 3}
########################################################################################
########################################################################################
##########################################################
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('fanout1_0', {'type': 'fanout'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('fanout1_1', {'type': 'fanout'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
FF_op
FF1_op_0
FF_op
FF1_op_1
list_ip_FF ['FF1_ip_0']
list_op_FF ['FF1_op_1']
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
OUTPUT NODE
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'FF1_ip_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_1', 'FF1_ip_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 2
faulty_node1_list ['A_0', 'A_1']
faulty_node2_list ['G1_0', 'G1_1']
stuck_at_list ['sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1']
faulty_node2_list ['G1_0', 'G1_1']
bfs {'FF1_ip_1': 5, 'fanout1_0': 2, 'out1_0': 2, 'A_0': 1, 'FF1_op_0': 1, 'fanout1_1': 4, 'G1_1': 5, 'G1_0': 3, 'A_1': 1, 'out1_1': 4}
faulty_list ['A_0', 'G1_0', 'sa0']
faulty_edge_select 0
faulty_edge_list ['A_0', 'G1_0', 'sa0']
OUTPUT
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_1 FF1_ip_1 x x
INPUT
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_0 G1_0
**********************Backtrace ********************
Backtrace node A_0 G1_0 1 0
I_Stack.peek() ('A_0', 'G1_0') 1
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 1 0
faulty_edge_list[:2] ['A_0', 'G1_0']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x x
node1 node2 fanout1_1 G1_1 x x
faulty_edge_list[:2] ['A_0', 'G1_0']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'FF1_ip_1']
**************************************************************
faulty_edge_list ['A_0', 'G1_0', 'sa0']
OUTPUT
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_1 FF1_ip_1 x x
INPUT
A_0 G1_0 1 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_0']
flag1,flag2 False True G1_1
flag1,flag2 True True G1_0
D_fronteir []
D_fronteir ['G1_0']
sort_D_fronteir
D_fronteir_list [('G1_0', 3)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_0
node1 node2 fanout1_0 G1_0
**********************Backtrace ********************
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_0', 'G1_0') 1
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_0', 'G1_0']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 1 0
node1 node2 fanout1_1 G1_1 1 0
faulty_edge_list[:2] ['A_0', 'G1_0']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'FF1_ip_1']
**************************************************************
faulty_edge_list ['A_0', 'G1_0', 'sa0']
OUTPUT
fanout1_0 out1_0 0 0
fanout1_1 out1_1 1 0
G1_1 FF1_ip_1 x 0
INPUT
A_0 G1_0 1 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 x 0
One turn over try another
G_Seq1.No_of_Unroll 3
########################################################################################
########################################################################################
##########################################################
('fanout1_2', {'type': 'fanout'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('fanout1_0', {'type': 'fanout'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('fanout1_1', {'type': 'fanout'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
list_ip_FF ['FF1_ip_0', 'FF1_ip_1']
list_op_FF ['FF1_op_1', 'FF1_op_2']
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
OUTPUT NODE
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'FF1_ip_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'FF1_ip_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 3
faulty_node1_list ['A_0', 'A_1', 'A_2']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2']
stuck_at_list ['sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2']
bfs {'fanout1_2': 6, 'A_2': 1, 'fanout1_0': 2, 'A_0': 1, 'FF1_op_0': 1, 'fanout1_1': 4, 'G1_1': 5, 'G1_0': 3, 'A_1': 1, 'out1_1': 4, 'FF1_ip_2': 7, 'out1_0': 2, 'out1_2': 6, 'G1_2': 7}
faulty_list ['A_1', 'G1_1', 'sa0']
faulty_edge_select 1
faulty_edge_list ['A_1', 'G1_1', 'sa0']
OUTPUT
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
G1_2 FF1_ip_2 x x
fanout1_1 out1_1 x x
INPUT
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
A_2 G1_2 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_1 G1_1
**********************Backtrace ********************
Backtrace node A_1 G1_1 1 0
I_Stack.peek() ('A_1', 'G1_1') 1
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 1 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'FF1_ip_2']
**************************************************************
faulty_edge_list ['A_1', 'G1_1', 'sa0']
OUTPUT
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
G1_2 FF1_ip_2 x x
fanout1_1 out1_1 x x
INPUT
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_1']
flag1,flag2 True True G1_1
D_fronteir []
D_fronteir ['G1_1']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
sort_D_fronteir
D_fronteir_list [('G1_1', 5)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_1
node1 node2 fanout1_1 G1_1
**********************Backtrace ********************
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_1', 'G1_1') 1
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'FF1_ip_2']
**************************************************************
faulty_edge_list ['A_1', 'G1_1', 'sa0']
OUTPUT
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
G1_2 FF1_ip_2 x 0
fanout1_1 out1_1 x 0
INPUT
A_0 G1_0 x 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_1', 5)]
flag1,flag2 True True G1_1
D_fronteir []
D_fronteir ['G1_1']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
sort_D_fronteir
D_fronteir_list [('G1_1', 5)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_1
node1 node2 fanout1_1 G1_1
**********************Backtrace ********************
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_1', 'G1_1') 1
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 1 0
node1 node2 fanout1_2 G1_2 1 0
faulty_edge_list[:2] ['A_1', 'G1_1']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'FF1_ip_2']
**************************************************************
faulty_edge_list ['A_1', 'G1_1', 'sa0']
OUTPUT
fanout1_2 out1_2 1 0
fanout1_0 out1_0 0 0
G1_2 FF1_ip_2 x 0
fanout1_1 out1_1 0 0
INPUT
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 1 0
A_2 G1_2 x 0
One turn over try another
G_Seq1.No_of_Unroll 4
########################################################################################
########################################################################################
##########################################################
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('fanout1_3', {'type': 'fanout'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_2', {'type': 'fanout'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3']
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
OUTPUT NODE
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'FF1_ip_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'FF1_ip_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 4
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3']
bfs {'A_3': 1, 'A_2': 1, 'fanout1_0': 2, 'A_0': 1, 'FF1_op_0': 1, 'FF1_ip_3': 9, 'fanout1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'A_1': 1, 'out1_1': 4, 'out1_0': 2, 'out1_3': 8, 'out1_2': 6, 'fanout1_2': 6, 'G1_2': 7, 'fanout1_3': 8}
faulty_list ['A_2', 'G1_2', 'sa0']
faulty_edge_select 2
faulty_edge_list ['A_2', 'G1_2', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_3 FF1_ip_3 x x
INPUT
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 x 0
A_1 G1_1 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_2 G1_2
**********************Backtrace ********************
Backtrace node A_2 G1_2 1 0
I_Stack.peek() ('A_2', 'G1_2') 1
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 1 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'FF1_ip_3']
**************************************************************
faulty_edge_list ['A_2', 'G1_2', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_3 FF1_ip_3 x x
INPUT
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 1 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_2']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 True True G1_2
D_fronteir []
D_fronteir ['G1_2']
sort_D_fronteir
D_fronteir_list [('G1_2', 7)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_2
node1 node2 fanout1_2 G1_2
**********************Backtrace ********************
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_2', 'G1_2') 1
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'FF1_ip_3']
**************************************************************
faulty_edge_list ['A_2', 'G1_2', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_3 FF1_ip_3 x x
INPUT
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 1 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_2', 7)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 True True G1_2
D_fronteir []
D_fronteir ['G1_2']
sort_D_fronteir
D_fronteir_list [('G1_2', 7)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_2
node1 node2 fanout1_2 G1_2
**********************Backtrace ********************
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_2', 'G1_2') 1
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'FF1_ip_3']
**************************************************************
faulty_edge_list ['A_2', 'G1_2', 'sa0']
OUTPUT
fanout1_3 out1_3 x 0
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
G1_3 FF1_ip_3 x 0
INPUT
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 0 0
A_2 G1_2 1 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_2', 7)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 True True G1_2
D_fronteir []
D_fronteir ['G1_2']
sort_D_fronteir
D_fronteir_list [('G1_2', 7)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_2
node1 node2 fanout1_2 G1_2
**********************Backtrace ********************
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_2', 'G1_2') 1
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 1 0
node1 node2 fanout1_3 G1_3 1 0
faulty_edge_list[:2] ['A_2', 'G1_2']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'FF1_ip_3']
**************************************************************
faulty_edge_list ['A_2', 'G1_2', 'sa0']
OUTPUT
fanout1_3 out1_3 1 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_3 FF1_ip_3 x 0
INPUT
A_3 G1_3 x 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_2 G1_2 1 0
A_1 G1_1 0 0
One turn over try another
G_Seq1.No_of_Unroll 5
########################################################################################
########################################################################################
##########################################################
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('fanout1_3', {'type': 'fanout'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_4', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4']
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
OUTPUT NODE
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'FF1_ip_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'FF1_ip_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 5
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4']
bfs {'FF1_ip_4': 11, 'out1_4': 10, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'fanout1_3': 8, 'out1_2': 6, 'out1_3': 8, 'fanout1_4': 10, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_4': 11, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7}
faulty_list ['A_3', 'G1_3', 'sa0']
faulty_edge_select 3
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_4 FF1_ip_4 x x
INPUT
A_4 G1_4 x 0
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 x 0
A_1 G1_1 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_3 G1_3
**********************Backtrace ********************
Backtrace node A_3 G1_3 1 0
I_Stack.peek() ('A_3', 'G1_3') 1
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 1 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'FF1_ip_4']
**************************************************************
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_4 FF1_ip_4 x x
INPUT
A_4 G1_4 x 0
A_3 G1_3 1 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_3']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 True True G1_3
D_fronteir []
D_fronteir ['G1_3']
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_3', 9)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_3
node1 node2 fanout1_3 G1_3
**********************Backtrace ********************
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_3', 'G1_3') 1
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'FF1_ip_4']
**************************************************************
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_4 FF1_ip_4 x x
INPUT
A_4 G1_4 x 0
A_3 G1_3 1 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_3', 9)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 True True G1_3
D_fronteir []
D_fronteir ['G1_3']
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_3', 9)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_3
node1 node2 fanout1_3 G1_3
**********************Backtrace ********************
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_3', 'G1_3') 1
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'FF1_ip_4']
**************************************************************
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 x 0
fanout1_4 out1_4 x 0
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
G1_4 FF1_ip_4 x 0
INPUT
A_4 G1_4 x 0
A_3 G1_3 1 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 0 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_3', 9)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 True True G1_3
D_fronteir []
D_fronteir ['G1_3']
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_3', 9)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_3
node1 node2 fanout1_3 G1_3
**********************Backtrace ********************
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_3', 'G1_3') 1
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'FF1_ip_4']
**************************************************************
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 x 0
fanout1_4 out1_4 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_4 FF1_ip_4 x 0
INPUT
A_4 G1_4 x 0
A_3 G1_3 1 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_3', 9)]
flag1,flag2 False False G1_1
flag1,flag2 False False G1_0
flag1,flag2 True True G1_3
D_fronteir []
D_fronteir ['G1_3']
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_3', 9)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_3
node1 node2 fanout1_3 G1_3
**********************Backtrace ********************
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_3', 'G1_3') 1
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 1 0
node1 node2 fanout1_4 G1_4 1 0
faulty_edge_list[:2] ['A_3', 'G1_3']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'FF1_ip_4']
**************************************************************
faulty_edge_list ['A_3', 'G1_3', 'sa0']
OUTPUT
fanout1_3 out1_3 0 0
fanout1_4 out1_4 1 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_4 FF1_ip_4 x 0
INPUT
A_4 G1_4 x 0
A_3 G1_3 1 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_2 G1_2 0 0
A_1 G1_1 0 0
One turn over try another
G_Seq1.No_of_Unroll 6
########################################################################################
########################################################################################
##########################################################
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_5', {'type': 'output', 'op_type': 'FF_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_5', {'type': 'input', 'op_type': 'FF_op'})
('G1_5', {'type': 'gate', 'gatetype': 'xor'})
('fanout1_3', {'type': 'fanout'})
('A_5', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_5', {'type': 'output', 'op_type': 'Primary_op'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_4', {'type': 'fanout'})
('fanout1_5', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
FF_op
FF1_op_5
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3', 'FF1_ip_4']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4', 'FF1_op_5']
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
4
FF1_op_5
list_outedge ('FF1_op_5', 'fanout1_5')
OUTPUT NODE
('G1_5', 'FF1_ip_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_5', 'G1_5', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'FF1_ip_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'G1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 6
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5']
bfs {'FF1_ip_5': 13, 'A_5': 1, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'fanout1_3': 8, 'out1_4': 10, 'out1_5': 12, 'out1_2': 6, 'out1_3': 8, 'fanout1_4': 10, 'fanout1_5': 12, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_5': 13, 'G1_4': 11, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7}
faulty_list ['A_4', 'G1_4', 'sa0']
faulty_edge_select 4
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x x
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_4 G1_4 x 0
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_4 G1_4
**********************Backtrace ********************
Backtrace node A_4 G1_4 1 0
I_Stack.peek() ('A_4', 'G1_4') 1
None
**********************Forward Implication 1st********************
node1 node2 A_4 G1_4 1 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x x
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_4 G1_4 1 0
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_4']
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 True True G1_4
D_fronteir []
D_fronteir ['G1_4']
sort_D_fronteir
D_fronteir_list [('G1_4', 11)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_4
node1 node2 fanout1_4 G1_4
**********************Backtrace ********************
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') x 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
Backtrace node A_3 G1_3 0 0
I_Stack.peek() ('A_4', 'G1_4') 1
('A_3', 'G1_3') 0
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x x
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_4 G1_4 1 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_4', 11)]
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 True True G1_4
D_fronteir []
D_fronteir ['G1_4']
sort_D_fronteir
D_fronteir_list [('G1_4', 11)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_4
node1 node2 fanout1_4 G1_4
**********************Backtrace ********************
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_4', 'G1_4') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x x
fanout1_3 out1_3 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_4 G1_4 1 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_4', 11)]
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 True True G1_4
D_fronteir []
D_fronteir ['G1_4']
sort_D_fronteir
D_fronteir_list [('G1_4', 11)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_4
node1 node2 fanout1_4 G1_4
**********************Backtrace ********************
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_4', 'G1_4') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x 0
fanout1_3 out1_3 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
INPUT
A_4 G1_4 1 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_4', 11)]
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 True True G1_4
D_fronteir []
D_fronteir ['G1_4']
sort_D_fronteir
D_fronteir_list [('G1_4', 11)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_4
node1 node2 fanout1_4 G1_4
**********************Backtrace ********************
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_4', 'G1_4') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x 0
fanout1_3 out1_3 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_4 G1_4 1 0
A_3 G1_3 0 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_4', 11)]
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 False False G1_1
flag1,flag2 False False G1_0
flag1,flag2 False True G1_2
flag1,flag2 True True G1_4
D_fronteir []
D_fronteir ['G1_4']
sort_D_fronteir
D_fronteir_list [('G1_4', 11)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_4
node1 node2 fanout1_4 G1_4
**********************Backtrace ********************
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_4', 'G1_4') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 0 0
node1 node2 fanout1_4 G1_4 0 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 1 0
node1 node2 fanout1_5 G1_5 1 0
faulty_edge_list[:2] ['A_4', 'G1_4']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'FF1_ip_5']
**************************************************************
faulty_edge_list ['A_4', 'G1_4', 'sa0']
OUTPUT
G1_5 FF1_ip_5 x 0
fanout1_3 out1_3 0 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 1 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_4 G1_4 1 0
A_3 G1_3 0 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 x 0
A_2 G1_2 0 0
A_1 G1_1 0 0
One turn over try another
G_Seq1.No_of_Unroll 7
########################################################################################
########################################################################################
##########################################################
('G1_6', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_6', {'type': 'output', 'op_type': 'FF_ip'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('out1_6', {'type': 'output', 'op_type': 'Primary_op'})
('A_6', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_5', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_6', {'type': 'input', 'op_type': 'FF_op'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('A_5', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_5', {'type': 'output', 'op_type': 'Primary_op'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_6', {'type': 'fanout'})
('fanout1_4', {'type': 'fanout'})
('fanout1_5', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('fanout1_3', {'type': 'fanout'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('G1_5', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_5', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
FF_op
FF1_op_5
FF_op
FF1_op_6
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3', 'FF1_ip_4', 'FF1_ip_5']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4', 'FF1_op_5', 'FF1_op_6']
4
FF1_op_5
list_outedge ('FF1_op_5', 'fanout1_5')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
5
FF1_op_6
list_outedge ('FF1_op_6', 'fanout1_6')
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
OUTPUT NODE
('G1_6', 'FF1_ip_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_6', 'G1_6', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_5', 'G1_5', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_6', 'FF1_ip_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'G1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'G1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 7
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6']
bfs {'G1_6': 15, 'FF1_ip_6': 15, 'out1_6': 14, 'A_6': 1, 'A_5': 1, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'fanout1_3': 8, 'out1_4': 10, 'out1_5': 12, 'out1_2': 6, 'out1_3': 8, 'fanout1_6': 14, 'fanout1_4': 10, 'fanout1_5': 12, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_5': 13, 'G1_4': 11, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7}
faulty_list ['A_5', 'G1_5', 'sa0']
faulty_edge_select 5
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x x
fanout1_6 out1_6 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
A_5 G1_5 x 0
A_2 G1_2 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_5 G1_5
**********************Backtrace ********************
Backtrace node A_5 G1_5 1 0
I_Stack.peek() ('A_5', 'G1_5') 1
None
**********************Forward Implication 1st********************
node1 node2 A_5 G1_5 1 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x x
fanout1_6 out1_6 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
A_5 G1_5 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_5']
flag1,flag2 False True G1_6
flag1,flag2 False True G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') x 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
Backtrace node A_3 G1_3 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x x
fanout1_6 out1_6 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 x 0
A_5 G1_5 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_5', 13)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x x
fanout1_6 out1_6 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 x x
A_1 G1_1 0 0
A_5 G1_5 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_5', 13)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x 0
fanout1_6 out1_6 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 x 0
fanout1_3 out1_3 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_0 G1_0 x 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 0 0
A_5 G1_5 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_5', 13)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_0
flag1,flag2 False True G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x 0
fanout1_6 out1_6 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 0 0
A_5 G1_5 1 0
A_2 G1_2 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_5', 13)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False False G1_1
flag1,flag2 False False G1_0
flag1,flag2 False True G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 0 0
node1 node2 fanout1_4 G1_4 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x 0
fanout1_6 out1_6 x 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 0 0
A_5 G1_5 1 0
A_2 G1_2 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_5', 13)]
flag1,flag2 False True G1_6
flag1,flag2 False False G1_2
flag1,flag2 True True G1_5
D_fronteir []
D_fronteir ['G1_5']
flag1,flag2 False False G1_1
flag1,flag2 False False G1_0
flag1,flag2 False False G1_3
flag1,flag2 False True G1_4
sort_D_fronteir
D_fronteir_list [('G1_5', 13)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_5
node1 node2 fanout1_5 G1_5
**********************Backtrace ********************
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') 0 0
None
Backtrace node A_4 G1_4 0 0
I_Stack.peek() ('A_5', 'G1_5') 1
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
None
**********************Forward Implication 1st********************
node1 node2 A_4 G1_4 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 0 0
node1 node2 fanout1_5 G1_5 0 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 1 0
node1 node2 fanout1_6 G1_6 1 0
faulty_edge_list[:2] ['A_5', 'G1_5']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'FF1_ip_6']
**************************************************************
faulty_edge_list ['A_5', 'G1_5', 'sa0']
OUTPUT
G1_6 FF1_ip_6 x 0
fanout1_6 out1_6 1 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_6 G1_6 x 0
A_4 G1_4 0 0
A_3 G1_3 0 0
A_0 G1_0 0 0
FF1_op_0 fanout1_0 0 0
A_1 G1_1 0 0
A_5 G1_5 1 0
A_2 G1_2 0 0
One turn over try another
G_Seq1.No_of_Unroll 8
########################################################################################
########################################################################################
##########################################################
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_7', {'type': 'output', 'op_type': 'FF_ip'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_5', {'type': 'output', 'op_type': 'FF_ip'})
('out1_6', {'type': 'output', 'op_type': 'Primary_op'})
('A_6', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_5', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_6', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_7', {'type': 'input', 'op_type': 'FF_op'})
('A_5', {'type': 'input', 'op_type': 'Primary_ip'})
('A_7', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_3', {'type': 'fanout'})
('out1_7', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_5', {'type': 'output', 'op_type': 'Primary_op'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_6', {'type': 'fanout'})
('fanout1_7', {'type': 'fanout'})
('fanout1_4', {'type': 'fanout'})
('fanout1_5', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('G1_5', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('G1_6', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_6', {'type': 'output', 'op_type': 'FF_ip'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
('G1_7', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
FF_op
FF1_op_5
FF_op
FF1_op_6
FF_op
FF1_op_7
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3', 'FF1_ip_4', 'FF1_ip_5', 'FF1_ip_6']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4', 'FF1_op_5', 'FF1_op_6', 'FF1_op_7']
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
5
FF1_op_6
list_outedge ('FF1_op_6', 'fanout1_6')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
6
FF1_op_7
list_outedge ('FF1_op_7', 'fanout1_7')
4
FF1_op_5
list_outedge ('FF1_op_5', 'fanout1_5')
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
OUTPUT NODE
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'FF1_ip_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_6', 'G1_6', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_5', 'G1_5', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_7', 'G1_7', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'FF1_ip_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'G1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'G1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'G1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 8
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7']
bfs {'G1_6': 15, 'FF1_ip_7': 17, 'A_7': 1, 'A_6': 1, 'A_5': 1, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'out1_6': 14, 'fanout1_3': 8, 'out1_7': 16, 'out1_4': 10, 'out1_5': 12, 'out1_2': 6, 'out1_3': 8, 'fanout1_6': 14, 'fanout1_7': 16, 'fanout1_4': 10, 'fanout1_5': 12, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_5': 13, 'G1_4': 11, 'G1_7': 17, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7}
faulty_list ['A_6', 'G1_6', 'sa0']
faulty_edge_select 6
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_7 FF1_ip_7 x x
INPUT
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_6 G1_6
**********************Backtrace ********************
Backtrace node A_6 G1_6 1 0
I_Stack.peek() ('A_6', 'G1_6') 1
None
**********************Forward Implication 1st********************
node1 node2 A_6 G1_6 1 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_7 FF1_ip_7 x x
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 x 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_6']
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') x 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
Backtrace node A_5 G1_5 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
None
**********************Forward Implication 1st********************
node1 node2 A_5 G1_5 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_7 FF1_ip_7 x x
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') x 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
Backtrace node A_3 G1_3 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_7 FF1_ip_7 x x
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
G1_7 FF1_ip_7 x x
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 x x
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
G1_7 FF1_ip_7 x 0
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 x 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_7 FF1_ip_7 x 0
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 0 0
A_2 G1_2 x 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False False G1_1
flag1,flag2 False True G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False False G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 0 0
node1 node2 fanout1_4 G1_4 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 0 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_7 FF1_ip_7 x 0
INPUT
A_6 G1_6 1 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 0 0
A_2 G1_2 0 0
A_1 G1_1 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_6', 15)]
flag1,flag2 False False G1_1
flag1,flag2 False False G1_3
flag1,flag2 False True G1_5
flag1,flag2 True True G1_6
D_fronteir []
D_fronteir ['G1_6']
flag1,flag2 False False G1_0
flag1,flag2 False False G1_2
flag1,flag2 False True G1_4
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_6', 15)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_6
node1 node2 fanout1_6 G1_6
**********************Backtrace ********************
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') 0 0
None
Backtrace node A_4 G1_4 0 0
I_Stack.peek() ('A_6', 'G1_6') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
None
**********************Forward Implication 1st********************
node1 node2 A_4 G1_4 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 0 0
node1 node2 fanout1_5 G1_5 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 0 0
node1 node2 fanout1_6 G1_6 0 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 1 0
node1 node2 fanout1_7 G1_7 1 0
faulty_edge_list[:2] ['A_6', 'G1_6']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'FF1_ip_7']
**************************************************************
faulty_edge_list ['A_6', 'G1_6', 'sa0']
OUTPUT
fanout1_3 out1_3 0 0
fanout1_6 out1_6 0 0
fanout1_7 out1_7 1 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
G1_7 FF1_ip_7 x 0
INPUT
A_6 G1_6 1 0
A_4 G1_4 0 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_5 G1_5 0 0
A_7 G1_7 x 0
A_0 G1_0 0 0
A_2 G1_2 0 0
A_1 G1_1 0 0
One turn over try another
G_Seq1.No_of_Unroll 9
########################################################################################
########################################################################################
##########################################################
('G1_6', {'type': 'gate', 'gatetype': 'xor'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_6', {'type': 'output', 'op_type': 'FF_ip'})
('fanout1_8', {'type': 'fanout'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_8', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_op_8', {'type': 'input', 'op_type': 'FF_op'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('G1_8', {'type': 'gate', 'gatetype': 'xor'})
('out1_6', {'type': 'output', 'op_type': 'Primary_op'})
('A_6', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_5', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_6', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_7', {'type': 'input', 'op_type': 'FF_op'})
('A_8', {'type': 'input', 'op_type': 'Primary_ip'})
('A_7', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_8', {'type': 'output', 'op_type': 'Primary_op'})
('out1_7', {'type': 'output', 'op_type': 'Primary_op'})
('A_5', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_5', {'type': 'output', 'op_type': 'Primary_op'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_6', {'type': 'fanout'})
('fanout1_7', {'type': 'fanout'})
('fanout1_4', {'type': 'fanout'})
('fanout1_5', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('fanout1_3', {'type': 'fanout'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('G1_5', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_7', {'type': 'output', 'op_type': 'FF_ip'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_5', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('G1_7', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_8
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
FF_op
FF1_op_5
FF_op
FF1_op_6
FF_op
FF1_op_7
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3', 'FF1_ip_4', 'FF1_ip_5', 'FF1_ip_6', 'FF1_ip_7']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4', 'FF1_op_5', 'FF1_op_6', 'FF1_op_7', 'FF1_op_8']
6
FF1_op_7
list_outedge ('FF1_op_7', 'fanout1_7')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
7
FF1_op_8
list_outedge ('FF1_op_8', 'fanout1_8')
5
FF1_op_6
list_outedge ('FF1_op_6', 'fanout1_6')
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
4
FF1_op_5
list_outedge ('FF1_op_5', 'fanout1_5')
OUTPUT NODE
('fanout1_8', 'out1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_8', 'FF1_ip_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_6', 'G1_6', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_8', 'G1_8', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_7', 'G1_7', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_5', 'G1_5', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_8', 'FF1_ip_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'fanout1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'fanout1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_8', 'G1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_8', 'out1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'G1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'G1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'G1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 9
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7', 'A_8']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7', 'G1_8']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7', 'A_8']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7', 'G1_8']
bfs {'G1_6': 15, 'G1_8': 19, 'FF1_ip_8': 19, 'fanout1_8': 18, 'A_7': 1, 'A_6': 1, 'A_5': 1, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'out1_8': 18, 'A_8': 1, 'out1_6': 14, 'fanout1_3': 8, 'out1_7': 16, 'out1_4': 10, 'out1_5': 12, 'out1_2': 6, 'out1_3': 8, 'fanout1_6': 14, 'fanout1_7': 16, 'fanout1_4': 10, 'fanout1_5': 12, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_5': 13, 'G1_4': 11, 'G1_7': 17, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7}
faulty_list ['A_7', 'G1_7', 'sa0']
faulty_edge_select 7
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x x
G1_8 FF1_ip_8 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_1 G1_1 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_8 G1_8 x 0
A_7 G1_7 x 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_0 G1_0 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_7 G1_7
**********************Backtrace ********************
Backtrace node A_7 G1_7 1 0
I_Stack.peek() ('A_7', 'G1_7') 1
None
**********************Forward Implication 1st********************
node1 node2 A_7 G1_7 1 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x x
G1_8 FF1_ip_8 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_1 G1_1 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_0 G1_0 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_7']
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') x 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
Backtrace node A_5 G1_5 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
None
**********************Forward Implication 1st********************
node1 node2 A_5 G1_5 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x x
G1_8 FF1_ip_8 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_1 G1_1 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
FF1_op_0 fanout1_0 x x
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_0 G1_0 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') x 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
Backtrace node A_3 G1_3 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x x
G1_8 FF1_ip_8 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_1 G1_1 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 x x
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_0 G1_0 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x x
G1_8 FF1_ip_8 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_4 out1_4 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_3 out1_3 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
INPUT
A_1 G1_1 0 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 x x
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_0 G1_0 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x 0
G1_8 FF1_ip_8 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 x 0
fanout1_3 out1_3 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
INPUT
A_1 G1_1 0 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_0 G1_0 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x 0
G1_8 FF1_ip_8 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_1 G1_1 0 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_0 G1_0 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False False G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False False G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 0 0
node1 node2 fanout1_4 G1_4 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x 0
G1_8 FF1_ip_8 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_1 G1_1 0 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_0 G1_0 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False True G1_4
flag1,flag2 False False G1_0
flag1,flag2 False False G1_2
flag1,flag2 False True G1_8
flag1,flag2 False True G1_5
flag1,flag2 False False G1_1
flag1,flag2 False False G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') 0 0
None
Backtrace node A_4 G1_4 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
None
**********************Forward Implication 1st********************
node1 node2 A_4 G1_4 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 0 0
node1 node2 fanout1_5 G1_5 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 0 0
node1 node2 fanout1_6 G1_6 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 x 0
G1_8 FF1_ip_8 x 0
fanout1_6 out1_6 0 0
fanout1_7 out1_7 x 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_1 G1_1 0 0
A_6 G1_6 x 0
A_4 G1_4 0 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_0 G1_0 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_7', 17)]
flag1,flag2 False True G1_6
flag1,flag2 False False G1_4
flag1,flag2 False False G1_0
flag1,flag2 False False G1_2
flag1,flag2 False True G1_8
flag1,flag2 False False G1_5
flag1,flag2 False False G1_1
flag1,flag2 False False G1_3
flag1,flag2 True True G1_7
D_fronteir []
D_fronteir ['G1_7']
sort_D_fronteir
D_fronteir_list [('G1_7', 17)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_7
node1 node2 fanout1_7 G1_7
**********************Backtrace ********************
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') 0 0
None
Backtrace node A_6 G1_6 0 0
I_Stack.peek() ('A_7', 'G1_7') 1
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
('A_6', 'G1_6') 0
None
**********************Forward Implication 1st********************
node1 node2 A_6 G1_6 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 0 0
node1 node2 fanout1_7 G1_7 0 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 1 0
node1 node2 fanout1_8 G1_8 1 0
faulty_edge_list[:2] ['A_7', 'G1_7']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'FF1_ip_8']
**************************************************************
faulty_edge_list ['A_7', 'G1_7', 'sa0']
OUTPUT
fanout1_8 out1_8 1 0
G1_8 FF1_ip_8 x 0
fanout1_6 out1_6 0 0
fanout1_7 out1_7 0 0
fanout1_4 out1_4 0 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_3 out1_3 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
INPUT
A_1 G1_1 0 0
A_6 G1_6 0 0
A_4 G1_4 0 0
A_3 G1_3 0 0
FF1_op_0 fanout1_0 0 0
A_8 G1_8 x 0
A_7 G1_7 1 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_0 G1_0 0 0
One turn over try another
G_Seq1.No_of_Unroll 10
########################################################################################
########################################################################################
##########################################################
('FF1_ip_1', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_9', {'type': 'output', 'op_type': 'FF_ip'})
('fanout1_4', {'type': 'fanout'})
('G1_9', {'type': 'gate', 'gatetype': 'xor'})
('G1_1', {'type': 'gate', 'gatetype': 'xor'})
('fanout1_9', {'type': 'fanout'})
('FF1_ip_7', {'type': 'output', 'op_type': 'FF_ip'})
('out1_8', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_ip_5', {'type': 'output', 'op_type': 'FF_ip'})
('A_8', {'type': 'input', 'op_type': 'Primary_ip'})
('G1_3', {'type': 'gate', 'gatetype': 'xor'})
('A_9', {'type': 'input', 'op_type': 'Primary_ip'})
('FF1_op_8', {'type': 'input', 'op_type': 'FF_op'})
('A_6', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_4', {'type': 'output', 'op_type': 'Primary_op'})
('A_4', {'type': 'input', 'op_type': 'Primary_ip'})
('A_3', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_3', {'type': 'output', 'op_type': 'Primary_op'})
('A_1', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_1', {'type': 'output', 'op_type': 'Primary_op'})
('FF1_op_0', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_1', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_2', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_3', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_4', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_5', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_6', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_7', {'type': 'input', 'op_type': 'FF_op'})
('FF1_op_9', {'type': 'input', 'op_type': 'FF_op'})
('out1_9', {'type': 'output', 'op_type': 'Primary_op'})
('A_0', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_6', {'type': 'output', 'op_type': 'Primary_op'})
('fanout1_3', {'type': 'fanout'})
('out1_7', {'type': 'output', 'op_type': 'Primary_op'})
('A_5', {'type': 'input', 'op_type': 'Primary_ip'})
('out1_0', {'type': 'output', 'op_type': 'Primary_op'})
('out1_2', {'type': 'output', 'op_type': 'Primary_op'})
('A_2', {'type': 'input', 'op_type': 'Primary_ip'})
('fanout1_6', {'type': 'fanout'})
('fanout1_7', {'type': 'fanout'})
('FF1_ip_8', {'type': 'output', 'op_type': 'FF_ip'})
('fanout1_5', {'type': 'fanout'})
('fanout1_2', {'type': 'fanout'})
('G1_8', {'type': 'gate', 'gatetype': 'xor'})
('fanout1_0', {'type': 'fanout'})
('fanout1_1', {'type': 'fanout'})
('G1_5', {'type': 'gate', 'gatetype': 'xor'})
('G1_4', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_0', {'type': 'output', 'op_type': 'FF_ip'})
('G1_6', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_6', {'type': 'output', 'op_type': 'FF_ip'})
('G1_0', {'type': 'gate', 'gatetype': 'xor'})
('fanout1_8', {'type': 'fanout'})
('G1_2', {'type': 'gate', 'gatetype': 'xor'})
('FF1_ip_2', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_4', {'type': 'output', 'op_type': 'FF_ip'})
('FF1_ip_3', {'type': 'output', 'op_type': 'FF_ip'})
('out1_5', {'type': 'output', 'op_type': 'Primary_op'})
('A_7', {'type': 'input', 'op_type': 'Primary_ip'})
('G1_7', {'type': 'gate', 'gatetype': 'xor'})
FF_op
FF1_op_8
FF_op
FF1_op_0
FF_op
FF1_op_1
FF_op
FF1_op_2
FF_op
FF1_op_3
FF_op
FF1_op_4
FF_op
FF1_op_5
FF_op
FF1_op_6
FF_op
FF1_op_7
FF_op
FF1_op_9
list_ip_FF ['FF1_ip_0', 'FF1_ip_1', 'FF1_ip_2', 'FF1_ip_3', 'FF1_ip_4', 'FF1_ip_5', 'FF1_ip_6', 'FF1_ip_7', 'FF1_ip_8']
list_op_FF ['FF1_op_1', 'FF1_op_2', 'FF1_op_3', 'FF1_op_4', 'FF1_op_5', 'FF1_op_6', 'FF1_op_7', 'FF1_op_8', 'FF1_op_9']
1
FF1_op_2
list_outedge ('FF1_op_2', 'fanout1_2')
7
FF1_op_8
list_outedge ('FF1_op_8', 'fanout1_8')
5
FF1_op_6
list_outedge ('FF1_op_6', 'fanout1_6')
8
FF1_op_9
list_outedge ('FF1_op_9', 'fanout1_9')
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout1_1')
6
FF1_op_7
list_outedge ('FF1_op_7', 'fanout1_7')
2
FF1_op_3
list_outedge ('FF1_op_3', 'fanout1_3')
4
FF1_op_5
list_outedge ('FF1_op_5', 'fanout1_5')
3
FF1_op_4
list_outedge ('FF1_op_4', 'fanout1_4')
OUTPUT NODE
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_9', 'FF1_ip_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_9', 'out1_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_8', 'out1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
INPUT NODE
('A_8', 'G1_8', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_9', 'G1_9', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_6', 'G1_6', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_4', 'G1_4', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_3', 'G1_3', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_1', 'G1_1', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('A_0', 'G1_0', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_5', 'G1_5', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_2', 'G1_2', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
('A_7', 'G1_7', {'fault': 'sa0', 'value_faulty': '0', 'value_non_fault': 'x'})
GATE
('G1_9', 'FF1_ip_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_8', 'fanout1_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'fanout1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
FANOUT
('G1_1', 'fanout1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_3', 'fanout1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('FF1_op_0', 'fanout1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_8', 'fanout1_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_5', 'fanout1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_4', 'fanout1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_6', 'fanout1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_0', 'fanout1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_2', 'fanout1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('G1_7', 'fanout1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'G1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_4', 'out1_4', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_9', 'G1_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_9', 'out1_9', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'out1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_3', 'G1_3', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'out1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_6', 'G1_6', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'out1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_7', 'G1_7', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'G1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_5', 'out1_5', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'out1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_2', 'G1_2', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'G1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_0', 'out1_0', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'G1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_1', 'out1_1', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_8', 'G1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
('fanout1_8', 'out1_8', {'value_non_fault': 'x', 'value_faulty': 'x', 'fault': ''})
No_of_Unroll 10
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7', 'A_8', 'A_9']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7', 'G1_8', 'G1_9']
stuck_at_list ['sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0', 'sa0']
fault_path_to_op True
faulty_node1_list ['A_0', 'A_1', 'A_2', 'A_3', 'A_4', 'A_5', 'A_6', 'A_7', 'A_8', 'A_9']
faulty_node2_list ['G1_0', 'G1_1', 'G1_2', 'G1_3', 'G1_4', 'G1_5', 'G1_6', 'G1_7', 'G1_8', 'G1_9']
bfs {'G1_6': 15, 'FF1_ip_9': 21, 'G1_8': 19, 'fanout1_8': 18, 'fanout1_9': 20, 'A_7': 1, 'A_6': 1, 'A_5': 1, 'A_4': 1, 'A_3': 1, 'A_2': 1, 'A_1': 1, 'A_0': 1, 'FF1_op_0': 1, 'A_9': 1, 'A_8': 1, 'out1_3': 8, 'out1_9': 20, 'out1_6': 14, 'out1_8': 18, 'out1_7': 16, 'out1_4': 10, 'out1_5': 12, 'out1_2': 6, 'fanout1_3': 8, 'fanout1_6': 14, 'fanout1_7': 16, 'fanout1_4': 10, 'fanout1_5': 12, 'fanout1_2': 6, 'out1_0': 2, 'fanout1_0': 2, 'fanout1_1': 4, 'G1_5': 13, 'G1_4': 11, 'G1_7': 17, 'out1_1': 4, 'G1_1': 5, 'G1_0': 3, 'G1_3': 9, 'G1_2': 7, 'G1_9': 21}
faulty_list ['A_8', 'G1_8', 'sa0']
faulty_edge_select 8
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 x 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_1 G1_1 x 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_7 G1_7 x 0
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
node1 node2 A_8 G1_8
**********************Backtrace ********************
Backtrace node A_8 G1_8 1 0
I_Stack.peek() ('A_8', 'G1_8') 1
None
**********************Forward Implication 1st********************
node1 node2 A_8 G1_8 1 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x x
node1 node2 fanout1_9 G1_9 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_1 G1_1 x 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_7 G1_7 x 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G1_8']
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x x
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') x 0
('fanout1_7', 'G1_7') x x
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x x
None
Backtrace node A_7 G1_7 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
None
**********************Forward Implication 1st********************
node1 node2 A_7 G1_7 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x x
node1 node2 fanout1_9 G1_9 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_1 G1_1 x 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 x 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x x
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x x
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') x 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
Backtrace node A_5 G1_5 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
None
**********************Forward Implication 1st********************
node1 node2 A_5 G1_5 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x x
node1 node2 fanout1_9 G1_9 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 x 0
A_1 G1_1 x 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x x
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x x
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') x 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
Backtrace node A_3 G1_3 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
None
**********************Forward Implication 1st********************
node1 node2 A_3 G1_3 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x x
node1 node2 fanout1_9 G1_9 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_1 G1_1 x 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x x
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x x
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') x 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
Backtrace node A_1 G1_1 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
None
**********************Forward Implication 1st********************
node1 node2 A_1 G1_1 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x x
node1 node2 fanout1_2 G1_2 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x x
node1 node2 fanout1_3 G1_3 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x x
node1 node2 fanout1_4 G1_4 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x x
node1 node2 fanout1_5 G1_5 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x x
node1 node2 fanout1_6 G1_6 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x x
node1 node2 fanout1_7 G1_7 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x x
node1 node2 fanout1_8 G1_8 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x x
node1 node2 fanout1_9 G1_9 x x
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x x
G1_9 FF1_ip_9 x x
fanout1_9 out1_9 x x
fanout1_3 out1_3 x x
fanout1_6 out1_6 x x
fanout1_7 out1_7 x x
fanout1_5 out1_5 x x
fanout1_2 out1_2 x x
fanout1_0 out1_0 x x
fanout1_1 out1_1 x x
fanout1_8 out1_8 x x
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 x x
A_0 G1_0 x 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x x
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x x
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x x
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x x
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x x
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x x
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x x
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x x
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x x
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x x
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x x
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x x
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x x
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x x
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x x
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') x x
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
node1 fanout1_0
Before Backtrace ('FF1_op_0', 'fanout1_0') x x
None
After Backtrace ('FF1_op_0', 'fanout1_0') 0 0
None
Backtrace node FF1_op_0 fanout1_0 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 FF1_op_0 fanout1_0 0 0
node1 node2 fanout1_0 G1_0 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 x 0
node1 node2 fanout1_1 G1_1 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 x 0
node1 node2 fanout1_2 G1_2 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x 0
node1 node2 fanout1_9 G1_9 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x 0
G1_9 FF1_ip_9 x 0
fanout1_9 out1_9 x 0
fanout1_3 out1_3 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 x 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 x 0
fanout1_8 out1_8 x 0
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 0 0
A_0 G1_0 x 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False True G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False True G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x 0
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x 0
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') x 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
node1 fanout1_2
Before Backtrace ('G1_1', 'fanout1_2') x 0
None
After Backtrace ('G1_1', 'fanout1_2') 0 0
None
node1 G1_1
Before Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') x 0
None
After Backtrace ('A_1', 'G1_1') 0 0
('fanout1_1', 'G1_1') 0 0
None
node1 fanout1_1
Before Backtrace ('G1_0', 'fanout1_1') x 0
None
After Backtrace ('G1_0', 'fanout1_1') 0 0
None
node1 G1_0
Before Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') x 0
None
After Backtrace ('fanout1_0', 'G1_0') 0 0
('A_0', 'G1_0') 0 0
None
Backtrace node A_0 G1_0 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
None
**********************Forward Implication 1st********************
node1 node2 A_0 G1_0 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_0', 'fanout1_1']
node1 node2 G1_0 fanout1_1 0 0
node1 node2 fanout1_1 G1_1 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_1', 'fanout1_2']
node1 node2 G1_1 fanout1_2 0 0
node1 node2 fanout1_2 G1_2 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 x 0
node1 node2 fanout1_3 G1_3 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 x 0
node1 node2 fanout1_4 G1_4 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x 0
node1 node2 fanout1_9 G1_9 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 x 0
G1_9 FF1_ip_9 x 0
fanout1_9 out1_9 x 0
fanout1_3 out1_3 x 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
fanout1_8 out1_8 x 0
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 0 0
A_0 G1_0 0 0
A_5 G1_5 0 0
A_2 G1_2 x 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False False G1_1
flag1,flag2 False True G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False False G1_0
flag1,flag2 False True G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x 0
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x 0
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') x 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
node1 fanout1_4
Before Backtrace ('G1_3', 'fanout1_4') x 0
None
After Backtrace ('G1_3', 'fanout1_4') 0 0
None
node1 G1_3
Before Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') x 0
None
After Backtrace ('A_3', 'G1_3') 0 0
('fanout1_3', 'G1_3') 0 0
None
node1 fanout1_3
Before Backtrace ('G1_2', 'fanout1_3') x 0
None
After Backtrace ('G1_2', 'fanout1_3') 0 0
None
node1 G1_2
Before Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') x 0
None
After Backtrace ('fanout1_2', 'G1_2') 0 0
('A_2', 'G1_2') 0 0
None
Backtrace node A_2 G1_2 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
None
**********************Forward Implication 1st********************
node1 node2 A_2 G1_2 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_2', 'fanout1_3']
node1 node2 G1_2 fanout1_3 0 0
node1 node2 fanout1_3 G1_3 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_3', 'fanout1_4']
node1 node2 G1_3 fanout1_4 0 0
node1 node2 fanout1_4 G1_4 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 x 0
node1 node2 fanout1_5 G1_5 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 x 0
node1 node2 fanout1_6 G1_6 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x 0
node1 node2 fanout1_9 G1_9 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 0 0
G1_9 FF1_ip_9 x 0
fanout1_9 out1_9 x 0
fanout1_3 out1_3 0 0
fanout1_6 out1_6 x 0
fanout1_7 out1_7 x 0
fanout1_5 out1_5 x 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
fanout1_8 out1_8 x 0
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 x 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 0 0
A_0 G1_0 0 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False False G1_1
flag1,flag2 False False G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False True G1_5
flag1,flag2 False True G1_4
flag1,flag2 False True G1_6
flag1,flag2 False False G1_0
flag1,flag2 False False G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x 0
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x 0
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') x 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
node1 fanout1_6
Before Backtrace ('G1_5', 'fanout1_6') x 0
None
After Backtrace ('G1_5', 'fanout1_6') 0 0
None
node1 G1_5
Before Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') x 0
None
After Backtrace ('A_5', 'G1_5') 0 0
('fanout1_5', 'G1_5') 0 0
None
node1 fanout1_5
Before Backtrace ('G1_4', 'fanout1_5') x 0
None
After Backtrace ('G1_4', 'fanout1_5') 0 0
None
node1 G1_4
Before Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') x 0
None
After Backtrace ('fanout1_4', 'G1_4') 0 0
('A_4', 'G1_4') 0 0
None
Backtrace node A_4 G1_4 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
None
**********************Forward Implication 1st********************
node1 node2 A_4 G1_4 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_4', 'fanout1_5']
node1 node2 G1_4 fanout1_5 0 0
node1 node2 fanout1_5 G1_5 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_5', 'fanout1_6']
node1 node2 G1_5 fanout1_6 0 0
node1 node2 fanout1_6 G1_6 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 x 0
node1 node2 fanout1_7 G1_7 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 x 0
node1 node2 fanout1_8 G1_8 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 x 0
node1 node2 fanout1_9 G1_9 x 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 0 0
G1_9 FF1_ip_9 x 0
fanout1_9 out1_9 x 0
fanout1_3 out1_3 0 0
fanout1_6 out1_6 0 0
fanout1_7 out1_7 x 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
fanout1_8 out1_8 x 0
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 x 0
A_4 G1_4 0 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 0 0
A_0 G1_0 0 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_7 G1_7 0 0
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G1_8', 19)]
flag1,flag2 False True G1_9
flag1,flag2 False False G1_1
flag1,flag2 False False G1_3
flag1,flag2 True True G1_8
D_fronteir []
D_fronteir ['G1_8']
flag1,flag2 False False G1_5
flag1,flag2 False False G1_4
flag1,flag2 False True G1_6
flag1,flag2 False False G1_0
flag1,flag2 False False G1_2
flag1,flag2 False True G1_7
sort_D_fronteir
D_fronteir_list [('G1_8', 19)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G1_8
node1 node2 fanout1_8 G1_8
**********************Backtrace ********************
node1 fanout1_8
Before Backtrace ('G1_7', 'fanout1_8') x 0
None
After Backtrace ('G1_7', 'fanout1_8') 0 0
None
node1 G1_7
Before Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') x 0
None
After Backtrace ('A_7', 'G1_7') 0 0
('fanout1_7', 'G1_7') 0 0
None
node1 fanout1_7
Before Backtrace ('G1_6', 'fanout1_7') x 0
None
After Backtrace ('G1_6', 'fanout1_7') 0 0
None
node1 G1_6
Before Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') x 0
None
After Backtrace ('fanout1_6', 'G1_6') 0 0
('A_6', 'G1_6') 0 0
None
Backtrace node A_6 G1_6 0 0
I_Stack.peek() ('A_8', 'G1_8') 1
('A_7', 'G1_7') 0
('A_5', 'G1_5') 0
('A_3', 'G1_3') 0
('A_1', 'G1_1') 0
('FF1_op_0', 'fanout1_0') 0
('A_0', 'G1_0') 0
('A_2', 'G1_2') 0
('A_4', 'G1_4') 0
('A_6', 'G1_6') 0
None
**********************Forward Implication 1st********************
node1 node2 A_6 G1_6 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_6', 'fanout1_7']
node1 node2 G1_6 fanout1_7 0 0
node1 node2 fanout1_7 G1_7 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_7', 'fanout1_8']
node1 node2 G1_7 fanout1_8 0 0
node1 node2 fanout1_8 G1_8 0 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_8', 'fanout1_9']
node1 node2 G1_8 fanout1_9 1 0
node1 node2 fanout1_9 G1_9 1 0
faulty_edge_list[:2] ['A_8', 'G1_8']
list(list(G.out_edges(nbunch=node2, data=False))[0] ['G1_9', 'FF1_ip_9']
**************************************************************
faulty_edge_list ['A_8', 'G1_8', 'sa0']
OUTPUT
fanout1_4 out1_4 0 0
G1_9 FF1_ip_9 x 0
fanout1_9 out1_9 1 0
fanout1_3 out1_3 0 0
fanout1_6 out1_6 0 0
fanout1_7 out1_7 0 0
fanout1_5 out1_5 0 0
fanout1_2 out1_2 0 0
fanout1_0 out1_0 0 0
fanout1_1 out1_1 0 0
fanout1_8 out1_8 0 0
INPUT
A_8 G1_8 1 0
A_9 G1_9 x 0
A_6 G1_6 0 0
A_4 G1_4 0 0
A_3 G1_3 0 0
A_1 G1_1 0 0
FF1_op_0 fanout1_0 0 0
A_0 G1_0 0 0
A_5 G1_5 0 0
A_2 G1_2 0 0
A_7 G1_7 0 0
One turn over try another
Fault not Testable
