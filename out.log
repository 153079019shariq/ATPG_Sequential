########################################################################################
########################################################################################
No_of_Unroll 1
faulty_node1_list ['fanout1']
faulty_node2_list ['G8']
stuck_at_list ['sa0']
A fanout5 1 1 5
G6 out1 7 6 0
G5 G6 6 2 4
B fanout6 1 1 5
G3 fanout2 4 6 5
G2 G3 3 2 9
G1 fanout1 2 3 3
G7 FF1_ip 5 4 0
fanout1 G7 2 3 3
fanout1 G8 2 3 9
fanout2 G5 4 6 6
fanout2 G4 4 6 5
fanout3 G5 1 1 9
fanout3 G4 1 1 10
fanout4 G7 2 8 3
fanout4 G9 2 8 4
fanout5 G2 1 1 11
fanout5 G1 1 1 5
fanout6 G2 1 1 11
fanout6 G1 1 1 5
G8 G3 4 3 8
G9 G6 9 3 3
FF1_op fanout3 1 1 9
G4 fanout4 2 8 3
faulty_list ['fanout1', 'G8', 'sa0']
faulty_edge_select 0
faulty_edge_list ['fanout1', 'G8', 'sa0']
OUTPUT
A fanout5 x 0
G6 out1 x x
G5 G6 x x
B fanout6 x 0
G3 fanout2 x x
G2 G3 x x
G1 fanout1 x x
G7 FF1_ip x x
fanout1 G7 x x
fanout1 G8 x 0
fanout2 G5 x x
fanout2 G4 x x
fanout3 G5 x x
fanout3 G4 x x
fanout4 G7 x x
fanout4 G9 x x
fanout5 G2 x x
fanout5 G1 x x
fanout6 G2 x x
fanout6 G1 x x
G8 G3 x x
G9 G6 x x
FF1_op fanout3 x x
G4 fanout4 x x
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
**********************Backtrace ********************
node1,node2 fanout1 G8
Before Backtrace ('G1', 'fanout1') x x
None
After Backtrace ('G1', 'fanout1') 1 1
None
node1,node2 G1 fanout1
node1,node2 G1 fanout1
Before Backtrace ('fanout5', 'G1') x x
('fanout6', 'G1') x x
None
G.nodes[node1]['gatetype'] G1
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout5', 'G1')
After Backtrace ('fanout5', 'G1') 1 1
('fanout6', 'G1') x x
None
node1,node2 fanout5 G1
node1,node2 fanout5 G1
Before Backtrace ('A', 'fanout5') x 0
None
After Backtrace ('A', 'fanout5') 1 1
None
node1,node2 A fanout5
Backtrace node A fanout5 1 0
I_Stack.peek() ('A', 'fanout5') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1', 'G8', 'sa0']
OUTPUT
A fanout5 1 1
G6 out1 x x
G5 G6 x 1
B fanout6 x 0
G3 fanout2 x 1
G2 G3 1 1
G1 fanout1 x x
G7 FF1_ip x x
fanout1 G7 x x
fanout1 G8 x 0
fanout2 G5 x 1
fanout2 G4 x 1
fanout3 G5 x x
fanout3 G4 x x
fanout4 G7 x x
fanout4 G9 x x
fanout5 G2 1 1
fanout5 G1 1 1
fanout6 G2 x x
fanout6 G1 x x
G8 G3 x 1
G9 G6 x x
FF1_op fanout3 x x
G4 fanout4 x x
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G8']
**********************Backtrace ********************
node1,node2 fanout1 G8
Before Backtrace ('G1', 'fanout1') x x
None
After Backtrace ('G1', 'fanout1') 1 1
None
node1,node2 G1 fanout1
node1,node2 G1 fanout1
Before Backtrace ('fanout5', 'G1') 1 1
('fanout6', 'G1') x x
None
G.nodes[node1]['gatetype'] G1
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout6', 'G1')
After Backtrace ('fanout5', 'G1') 1 1
('fanout6', 'G1') 1 1
None
node1,node2 fanout6 G1
node1,node2 fanout6 G1
Before Backtrace ('B', 'fanout6') x 0
None
After Backtrace ('B', 'fanout6') 1 1
None
node1,node2 B fanout6
Backtrace node B fanout6 1 0
I_Stack.peek() ('A', 'fanout5') 1
('B', 'fanout6') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1', 'G8', 'sa0']
OUTPUT
A fanout5 1 1
G6 out1 x x
G5 G6 x 1
B fanout6 1 1
G3 fanout2 0 1
G2 G3 1 1
G1 fanout1 1 1
G7 FF1_ip 1 1
fanout1 G7 1 1
fanout1 G8 1 0
fanout2 G5 0 1
fanout2 G4 0 1
fanout3 G5 x x
fanout3 G4 x x
fanout4 G7 0 x
fanout4 G9 0 x
fanout5 G2 1 1
fanout5 G1 1 1
fanout6 G2 1 1
fanout6 G1 1 1
G8 G3 0 1
G9 G6 1 x
FF1_op fanout3 x x
G4 fanout4 0 x
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G8', 'G8']
D_fronteir []
D_fronteir ['G5']
D_fronteir ['G5']
D_fronteir ['G4', 'G5']
sort_D_fronteir
[('G4', 'fanout4')]
[('G5', 'G6')]
D_fronteir_list [('G4', 3), ('G5', 4)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G4
**********************Backtrace ********************
node1,node2 fanout3 G4
Before Backtrace ('FF1_op', 'fanout3') x x
None
After Backtrace ('FF1_op', 'fanout3') 1 1
None
node1,node2 FF1_op fanout3
Backtrace node FF1_op fanout3 1 0
I_Stack.peek() ('A', 'fanout5') 1
('B', 'fanout6') 1
('FF1_op', 'fanout3') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1', 'G8', 'sa0']
OUTPUT
A fanout5 1 1
G6 out1 1 0
G5 G6 1 1
B fanout6 1 1
G3 fanout2 0 1
G2 G3 1 1
G1 fanout1 1 1
G7 FF1_ip 1 1
fanout1 G7 1 1
fanout1 G8 1 0
fanout2 G5 0 1
fanout2 G4 0 1
fanout3 G5 1 1
fanout3 G4 1 1
fanout4 G7 0 1
fanout4 G9 0 1
fanout5 G2 1 1
fanout5 G1 1 1
fanout6 G2 1 1
fanout6 G1 1 1
G8 G3 0 1
G9 G6 1 0
FF1_op fanout3 1 1
G4 fanout4 0 1
One turn over try another
G_Seq1.No_of_Unroll 2
########################################################################################
########################################################################################
##########################################################
FF_op
FF1_op_0
FF_op
FF1_op_1
list_ip_FF ['FF1_ip_0']
list_op_FF ['FF1_op_1']
0
FF1_op_1
list_outedge ('FF1_op_1', 'fanout3_1')
No_of_Unroll 2
faulty_node1_list ['fanout1_0', 'fanout1_1']
faulty_node2_list ['G8_0', 'G8_1']
stuck_at_list ['sa0', 'sa0']
G2_0 G3_0 3 2 10
G2_1 G3_1 3 2 12
A_0 fanout5_0 1 1 12
FF1_op_0 fanout3_0 1 1 9
A_1 fanout5_1 1 1 8
G5_1 G6_1 10 5 7
fanout3_1 G5_1 5 4 12
fanout3_1 G4_1 5 4 10
B_0 fanout6_0 1 1 12
B_1 fanout6_1 1 1 8
G4_0 fanout4_0 2 8 4
G4_1 fanout4_1 5 11 3
fanout4_1 G9_1 5 11 7
fanout4_1 G7_1 5 11 3
fanout4_0 G9_0 2 8 4
fanout4_0 G7_0 2 8 13
fanout3_0 G4_0 1 1 11
fanout3_0 G5_0 1 1 9
G5_0 G6_0 6 2 4
fanout2_1 G5_1 4 6 13
fanout2_1 G4_1 4 6 8
fanout2_0 G4_0 4 6 6
fanout2_0 G5_0 4 6 6
G6_0 out1_0 7 6 0
G6_1 out1_1 11 12 0
G7_1 FF1_ip_1 8 4 0
G7_0 fanout3_1 5 4 10
G9_1 G6_1 12 6 6
G9_0 G6_0 9 3 3
fanout1_0 G8_0 2 3 10
fanout1_0 G7_0 2 3 13
fanout1_1 G8_1 2 3 12
fanout1_1 G7_1 2 3 6
G1_1 fanout1_1 2 3 6
G1_0 fanout1_0 2 3 10
G3_1 fanout2_1 4 6 8
G3_0 fanout2_0 4 6 6
fanout6_1 G2_1 1 1 14
fanout6_1 G1_1 1 1 8
fanout6_0 G2_0 1 1 12
fanout6_0 G1_0 1 1 12
fanout5_0 G2_0 1 1 12
fanout5_0 G1_0 1 1 12
fanout5_1 G2_1 1 1 14
fanout5_1 G1_1 1 1 8
G8_0 G3_0 4 3 9
G8_1 G3_1 4 3 11
faulty_list ['fanout1_1', 'G8_1', 'sa0']
faulty_edge_select 1
faulty_edge_list ['fanout1_1', 'G8_1', 'sa0']
OUTPUT
G2_0 G3_0 x x
G2_1 G3_1 x x
A_0 fanout5_0 x 0
FF1_op_0 fanout3_0 x x
A_1 fanout5_1 x 0
G5_1 G6_1 x x
fanout3_1 G5_1 x x
fanout3_1 G4_1 x x
B_0 fanout6_0 x 0
B_1 fanout6_1 x 0
G4_0 fanout4_0 x x
G4_1 fanout4_1 x x
fanout4_1 G9_1 x x
fanout4_1 G7_1 x x
fanout4_0 G9_0 x x
fanout4_0 G7_0 x x
fanout3_0 G4_0 x x
fanout3_0 G5_0 x x
G5_0 G6_0 x x
fanout2_1 G5_1 x x
fanout2_1 G4_1 x x
fanout2_0 G4_0 x x
fanout2_0 G5_0 x x
G6_0 out1_0 x x
G6_1 out1_1 x x
G7_1 FF1_ip_1 x x
G7_0 fanout3_1 x x
G9_1 G6_1 x x
G9_0 G6_0 x x
fanout1_0 G8_0 x 0
fanout1_0 G7_0 x x
fanout1_1 G8_1 x 0
fanout1_1 G7_1 x x
G1_1 fanout1_1 x x
G1_0 fanout1_0 x x
G3_1 fanout2_1 x x
G3_0 fanout2_0 x x
fanout6_1 G2_1 x x
fanout6_1 G1_1 x x
fanout6_0 G2_0 x x
fanout6_0 G1_0 x x
fanout5_0 G2_0 x x
fanout5_0 G1_0 x x
fanout5_1 G2_1 x x
fanout5_1 G1_1 x x
G8_0 G3_0 x x
G8_1 G3_1 x x
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list []
**********************Backtrace ********************
node1,node2 fanout1_1 G8_1
Before Backtrace ('G1_1', 'fanout1_1') x x
None
After Backtrace ('G1_1', 'fanout1_1') 1 1
None
node1,node2 G1_1 fanout1_1
node1,node2 G1_1 fanout1_1
Before Backtrace ('fanout5_1', 'G1_1') x x
('fanout6_1', 'G1_1') x x
None
G.nodes[node1]['gatetype'] G1_1
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout5_1', 'G1_1')
After Backtrace ('fanout5_1', 'G1_1') 1 1
('fanout6_1', 'G1_1') x x
None
node1,node2 fanout5_1 G1_1
node1,node2 fanout5_1 G1_1
Before Backtrace ('A_1', 'fanout5_1') x 0
None
After Backtrace ('A_1', 'fanout5_1') 1 1
None
node1,node2 A_1 fanout5_1
Backtrace node A_1 fanout5_1 1 0
I_Stack.peek() ('A_1', 'fanout5_1') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1_1', 'G8_1', 'sa0']
OUTPUT
G2_0 G3_0 x x
G2_1 G3_1 1 1
A_0 fanout5_0 x 0
FF1_op_0 fanout3_0 x x
A_1 fanout5_1 1 1
G5_1 G6_1 x 1
fanout3_1 G5_1 x x
fanout3_1 G4_1 x x
B_0 fanout6_0 x 0
B_1 fanout6_1 x 0
G4_0 fanout4_0 x x
G4_1 fanout4_1 x x
fanout4_1 G9_1 x x
fanout4_1 G7_1 x x
fanout4_0 G9_0 x x
fanout4_0 G7_0 x x
fanout3_0 G4_0 x x
fanout3_0 G5_0 x x
G5_0 G6_0 x x
fanout2_1 G5_1 x 1
fanout2_1 G4_1 x 1
fanout2_0 G4_0 x x
fanout2_0 G5_0 x x
G6_0 out1_0 x x
G6_1 out1_1 x x
G7_1 FF1_ip_1 x x
G7_0 fanout3_1 x x
G9_1 G6_1 x x
G9_0 G6_0 x x
fanout1_0 G8_0 x 0
fanout1_0 G7_0 x x
fanout1_1 G8_1 x 0
fanout1_1 G7_1 x x
G1_1 fanout1_1 x x
G1_0 fanout1_0 x x
G3_1 fanout2_1 x 1
G3_0 fanout2_0 x x
fanout6_1 G2_1 x x
fanout6_1 G1_1 x x
fanout6_0 G2_0 x x
fanout6_0 G1_0 x x
fanout5_0 G2_0 x x
fanout5_0 G1_0 x x
fanout5_1 G2_1 1 1
fanout5_1 G1_1 1 1
G8_0 G3_0 x x
G8_1 G3_1 x 1
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G8_1']
**********************Backtrace ********************
node1,node2 fanout1_1 G8_1
Before Backtrace ('G1_1', 'fanout1_1') x x
None
After Backtrace ('G1_1', 'fanout1_1') 1 1
None
node1,node2 G1_1 fanout1_1
node1,node2 G1_1 fanout1_1
Before Backtrace ('fanout5_1', 'G1_1') 1 1
('fanout6_1', 'G1_1') x x
None
G.nodes[node1]['gatetype'] G1_1
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout6_1', 'G1_1')
After Backtrace ('fanout5_1', 'G1_1') 1 1
('fanout6_1', 'G1_1') 1 1
None
node1,node2 fanout6_1 G1_1
node1,node2 fanout6_1 G1_1
Before Backtrace ('B_1', 'fanout6_1') x 0
None
After Backtrace ('B_1', 'fanout6_1') 1 1
None
node1,node2 B_1 fanout6_1
Backtrace node B_1 fanout6_1 1 0
I_Stack.peek() ('A_1', 'fanout5_1') 1
('B_1', 'fanout6_1') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1_1', 'G8_1', 'sa0']
OUTPUT
G2_0 G3_0 x x
G2_1 G3_1 1 1
A_0 fanout5_0 x 0
FF1_op_0 fanout3_0 x x
A_1 fanout5_1 1 1
G5_1 G6_1 x 1
fanout3_1 G5_1 x x
fanout3_1 G4_1 x x
B_0 fanout6_0 x 0
B_1 fanout6_1 1 1
G4_0 fanout4_0 x x
G4_1 fanout4_1 0 x
fanout4_1 G9_1 0 x
fanout4_1 G7_1 0 x
fanout4_0 G9_0 x x
fanout4_0 G7_0 x x
fanout3_0 G4_0 x x
fanout3_0 G5_0 x x
G5_0 G6_0 x x
fanout2_1 G5_1 0 1
fanout2_1 G4_1 0 1
fanout2_0 G4_0 x x
fanout2_0 G5_0 x x
G6_0 out1_0 x x
G6_1 out1_1 x x
G7_1 FF1_ip_1 1 1
G7_0 fanout3_1 x x
G9_1 G6_1 1 x
G9_0 G6_0 x x
fanout1_0 G8_0 x 0
fanout1_0 G7_0 x x
fanout1_1 G8_1 1 0
fanout1_1 G7_1 1 1
G1_1 fanout1_1 1 1
G1_0 fanout1_0 x x
G3_1 fanout2_1 0 1
G3_0 fanout2_0 x x
fanout6_1 G2_1 1 1
fanout6_1 G1_1 1 1
fanout6_0 G2_0 x x
fanout6_0 G1_0 x x
fanout5_0 G2_0 x x
fanout5_0 G1_0 x x
fanout5_1 G2_1 1 1
fanout5_1 G1_1 1 1
G8_0 G3_0 x x
G8_1 G3_1 0 1
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list ['G8_1', 'G8_1']
D_fronteir []
D_fronteir ['G5_1']
D_fronteir ['G5_1']
D_fronteir ['G4_1', 'G5_1']
sort_D_fronteir
[('G4_1', 'fanout4_1')]
[('G5_1', 'G6_1')]
D_fronteir_list [('G4_1', 3), ('G5_1', 7)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G4_1
**********************Backtrace ********************
node1,node2 fanout3_1 G4_1
Before Backtrace ('G7_0', 'fanout3_1') x x
None
After Backtrace ('G7_0', 'fanout3_1') 1 1
None
node1,node2 G7_0 fanout3_1
node1,node2 G7_0 fanout3_1
Before Backtrace ('fanout4_0', 'G7_0') x x
('fanout1_0', 'G7_0') x x
None
G.nodes[node1]['gatetype'] G7_0
val_assign 1
G.nodes[node1]['gatetype'] or
edge_to_assign ('fanout1_0', 'G7_0')
After Backtrace ('fanout4_0', 'G7_0') x x
('fanout1_0', 'G7_0') 1 1
None
node1,node2 fanout1_0 G7_0
node1,node2 fanout1_0 G7_0
Before Backtrace ('G1_0', 'fanout1_0') x x
None
After Backtrace ('G1_0', 'fanout1_0') 1 1
None
node1,node2 G1_0 fanout1_0
node1,node2 G1_0 fanout1_0
Before Backtrace ('fanout5_0', 'G1_0') x x
('fanout6_0', 'G1_0') x x
None
G.nodes[node1]['gatetype'] G1_0
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout5_0', 'G1_0')
After Backtrace ('fanout5_0', 'G1_0') 1 1
('fanout6_0', 'G1_0') x x
None
node1,node2 fanout5_0 G1_0
node1,node2 fanout5_0 G1_0
Before Backtrace ('A_0', 'fanout5_0') x 0
None
After Backtrace ('A_0', 'fanout5_0') 1 1
None
node1,node2 A_0 fanout5_0
Backtrace node A_0 fanout5_0 1 0
I_Stack.peek() ('A_1', 'fanout5_1') 1
('B_1', 'fanout6_1') 1
('A_0', 'fanout5_0') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1_1', 'G8_1', 'sa0']
OUTPUT
G2_0 G3_0 1 1
G2_1 G3_1 1 1
A_0 fanout5_0 1 1
FF1_op_0 fanout3_0 x x
A_1 fanout5_1 1 1
G5_1 G6_1 x 1
fanout3_1 G5_1 x x
fanout3_1 G4_1 x x
B_0 fanout6_0 x 0
B_1 fanout6_1 1 1
G4_0 fanout4_0 x x
G4_1 fanout4_1 0 x
fanout4_1 G9_1 0 x
fanout4_1 G7_1 0 x
fanout4_0 G9_0 x x
fanout4_0 G7_0 x x
fanout3_0 G4_0 x x
fanout3_0 G5_0 x x
G5_0 G6_0 x 1
fanout2_1 G5_1 0 1
fanout2_1 G4_1 0 1
fanout2_0 G4_0 x 1
fanout2_0 G5_0 x 1
G6_0 out1_0 x x
G6_1 out1_1 x x
G7_1 FF1_ip_1 1 1
G7_0 fanout3_1 x x
G9_1 G6_1 1 x
G9_0 G6_0 x x
fanout1_0 G8_0 x 0
fanout1_0 G7_0 x x
fanout1_1 G8_1 1 0
fanout1_1 G7_1 1 1
G1_1 fanout1_1 1 1
G1_0 fanout1_0 x x
G3_1 fanout2_1 0 1
G3_0 fanout2_0 x 1
fanout6_1 G2_1 1 1
fanout6_1 G1_1 1 1
fanout6_0 G2_0 x x
fanout6_0 G1_0 x x
fanout5_0 G2_0 1 1
fanout5_0 G1_0 1 1
fanout5_1 G2_1 1 1
fanout5_1 G1_1 1 1
G8_0 G3_0 x 1
G8_1 G3_1 0 1
One turn over try another
test_not_possible_with_this_val() False
**********************Objective ********************
D_fronteir_list [('G4_1', 3), ('G5_1', 7)]
D_fronteir []
D_fronteir ['G5_1']
D_fronteir ['G5_1']
D_fronteir ['G4_1', 'G5_1']
sort_D_fronteir
[('G4_1', 'fanout4_1')]
[('G5_1', 'G6_1')]
D_fronteir_list [('G4_1', 3), ('G5_1', 7)]
@@@@@@@@@@@ undefined_ip
node_D_fronteir G4_1
**********************Backtrace ********************
node1,node2 fanout3_1 G4_1
Before Backtrace ('G7_0', 'fanout3_1') x x
None
After Backtrace ('G7_0', 'fanout3_1') 1 1
None
node1,node2 G7_0 fanout3_1
node1,node2 G7_0 fanout3_1
Before Backtrace ('fanout4_0', 'G7_0') x x
('fanout1_0', 'G7_0') x x
None
G.nodes[node1]['gatetype'] G7_0
val_assign 1
G.nodes[node1]['gatetype'] or
edge_to_assign ('fanout1_0', 'G7_0')
After Backtrace ('fanout4_0', 'G7_0') x x
('fanout1_0', 'G7_0') 1 1
None
node1,node2 fanout1_0 G7_0
node1,node2 fanout1_0 G7_0
Before Backtrace ('G1_0', 'fanout1_0') x x
None
After Backtrace ('G1_0', 'fanout1_0') 1 1
None
node1,node2 G1_0 fanout1_0
node1,node2 G1_0 fanout1_0
Before Backtrace ('fanout5_0', 'G1_0') 1 1
('fanout6_0', 'G1_0') x x
None
G.nodes[node1]['gatetype'] G1_0
val_assign 1
G.nodes[node1]['gatetype'] and
edge_to_assign ('fanout6_0', 'G1_0')
After Backtrace ('fanout5_0', 'G1_0') 1 1
('fanout6_0', 'G1_0') 1 1
None
node1,node2 fanout6_0 G1_0
node1,node2 fanout6_0 G1_0
Before Backtrace ('B_0', 'fanout6_0') x 0
None
After Backtrace ('B_0', 'fanout6_0') 1 1
None
node1,node2 B_0 fanout6_0
Backtrace node B_0 fanout6_0 1 0
I_Stack.peek() ('A_1', 'fanout5_1') 1
('B_1', 'fanout6_1') 1
('A_0', 'fanout5_0') 1
('B_0', 'fanout6_0') 1
None
**********************Forward Implication 1st********************
**************************************************************
faulty_edge_list ['fanout1_1', 'G8_1', 'sa0']
OUTPUT
G2_0 G3_0 1 1
G2_1 G3_1 1 1
A_0 fanout5_0 1 1
FF1_op_0 fanout3_0 x x
A_1 fanout5_1 1 1
G5_1 G6_1 1 1
fanout3_1 G5_1 1 1
fanout3_1 G4_1 1 1
B_0 fanout6_0 1 1
B_1 fanout6_1 1 1
G4_0 fanout4_0 0 x
G4_1 fanout4_1 0 1
fanout4_1 G9_1 0 1
fanout4_1 G7_1 0 1
fanout4_0 G9_0 0 x
fanout4_0 G7_0 0 x
fanout3_0 G4_0 x x
fanout3_0 G5_0 x x
G5_0 G6_0 x 1
fanout2_1 G5_1 0 1
fanout2_1 G4_1 0 1
fanout2_0 G4_0 0 1
fanout2_0 G5_0 0 1
G6_0 out1_0 x x
G6_1 out1_1 1 0
G7_1 FF1_ip_1 1 1
G7_0 fanout3_1 1 1
G9_1 G6_1 1 0
G9_0 G6_0 1 x
fanout1_0 G8_0 1 0
fanout1_0 G7_0 1 1
fanout1_1 G8_1 1 0
fanout1_1 G7_1 1 1
G1_1 fanout1_1 1 1
G1_0 fanout1_0 1 1
G3_1 fanout2_1 0 1
G3_0 fanout2_0 0 1
fanout6_1 G2_1 1 1
fanout6_1 G1_1 1 1
fanout6_0 G2_0 1 1
fanout6_0 G1_0 1 1
fanout5_0 G2_0 1 1
fanout5_0 G1_0 1 1
fanout5_1 G2_1 1 1
fanout5_1 G1_1 1 1
G8_0 G3_0 0 1
G8_1 G3_1 0 1
One turn over try another
